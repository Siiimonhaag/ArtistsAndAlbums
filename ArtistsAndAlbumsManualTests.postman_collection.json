{
	"info": {
		"_postman_id": "a3daf07e-1813-41bb-9c9b-341e458ef3dc",
		"name": "ArtistsAndAlbumsManualTests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Add single artist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code should be 200 = ok', function(){\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"pm.test('Response time should be less than 500ms', function(){\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"\r",
							"let responseData = pm.response.json();\r",
							"pm.test('We get the correct data from the REST-api', function(){\r",
							"    pm.expect(responseData.changes).to.equal(1);\r",
							"    pm.expect(responseData.lastInsertRowid).to.be.a('number');\r",
							"    pm.expect(responseData.lastInsertRowid).to.be.above(0);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"artistName\": \"TestArtist\",\r\n    \"artistDescription\": \"This is a test description for the TestArtist\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/artists",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"artists"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get single artist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code should be 200 = ok', function(){\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"pm.test('Response time should be less than 500ms', function(){\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.body(\r",
							"        '{\"id\":99,\"artistName\":\"TestArtist\",\"artistDescription\":\"This is a test description for the TestArtist\"}'\r",
							"        );\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/artists/99",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"artists",
						"99"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all artists",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code should be 200 = ok', function(){\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"pm.test('Response time should be less than 500ms', function(){\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"Requested data is identical to the actual data\", function () {\r",
							"    pm.expect(pm.responseData).to.deep.equal();\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/artists",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"artists"
					]
				}
			},
			"response": []
		},
		{
			"name": "Edit an artist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code should be 200 = ok', function(){\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"pm.test('Response time should be less than 500ms', function(){\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"let responseData = pm.response.json();\r",
							"pm.test('We get the correct data from the REST-api', function(){\r",
							"    pm.expect(responseData.changes).to.equal(1);\r",
							"    pm.expect(responseData.lastInsertRowid).to.be.a('number');\r",
							"    pm.expect(responseData.lastInsertRowid).to.be.above(0);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"artistName\": \"UpdatedTestArtist\",\r\n    \"artistDescription\": \"This is an updated descrtiption for the UpdatedTestArtist\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/artists/99",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"artists",
						"99"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add single album",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code should be 200 = ok', function(){\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"pm.test('Response time should be less than 500ms', function(){\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"let responseData = pm.response.json();\r",
							"pm.test('We get the correct data from the REST-api', function(){\r",
							"    pm.expect(responseData.changes).to.equal(1);\r",
							"    pm.expect(responseData.lastInsertRowid).to.be.a('number');\r",
							"    pm.expect(responseData.lastInsertRowid).to.be.above(0);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "    {\r\n        \"albumName\": \"TestAlbum\",\r\n        \"releaseDate\": \"2021\",\r\n        \"artistId\": 99\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/albums",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"albums"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get single album",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code should be 200 = ok', function(){\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"pm.test('Response time should be less than 500ms', function(){\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.body(\r",
							"        '{\"id\":56,\"albumName\":\"TestAlbum\",\"releaseDate\":\"2021\",\"artistId\":99}'\r",
							"        );\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/albums/56",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"albums",
						"56"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all albums",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code should be 200 = ok', function(){\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"pm.test('Response time should be less than 500ms', function(){\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"Requested data is identical to the actual data\", function () {\r",
							"    pm.expect(pm.responseData).to.deep.equal();\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/albums",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"albums"
					]
				}
			},
			"response": []
		},
		{
			"name": "Edit an album",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code should be 200 = ok', function(){\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"pm.test('Response time should be less than 500ms', function(){\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"let responseData = pm.response.json();\r",
							"pm.test('We get the correct data from the REST-api', function(){\r",
							"    pm.expect(responseData.changes).to.equal(1);\r",
							"    pm.expect(responseData.lastInsertRowid).to.be.a('number');\r",
							"    pm.expect(responseData.lastInsertRowid).to.be.above(0);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "    {\r\n        \"albumName\": \"UpdatedTestAlbum\",\r\n        \"releaseDate\": \"2022\",\r\n        \"artistId\": 99\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/albums/56",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"albums",
						"56"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete an album",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code should be 200 = ok', function(){\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"pm.test('Response time should be less than 500ms', function(){\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"let responseData = pm.response.json();\r",
							"pm.test('We get the correct data from the REST-api', function(){\r",
							"    pm.expect(responseData.changes).to.equal(1);\r",
							"    pm.expect(responseData.lastInsertRowid).to.be.a('number');\r",
							"    pm.expect(responseData.lastInsertRowid).to.be.above(0);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/albums/56",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"albums",
						"56"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete an artist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code should be 200 = ok', function(){\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"pm.test('Response time should be less than 500ms', function(){\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"let responseData = pm.response.json();\r",
							"pm.test('We get the correct data from the REST-api', function(){\r",
							"    pm.expect(responseData.changes).to.equal(1);\r",
							"    pm.expect(responseData.lastInsertRowid).to.be.a('number');\r",
							"    pm.expect(responseData.lastInsertRowid).to.be.above(0);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/artists/99",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"artists",
						"99"
					]
				}
			},
			"response": []
		}
	]
}